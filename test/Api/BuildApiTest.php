<?php
/**
 * BuildApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * TeamCity REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.24-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * BuildApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BuildApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addBuildVcsLabel
     *
     * Add a VCS label to the matching build..
     *
     */
    public function testAddBuildVcsLabel()
    {
    }

    /**
     * Test case for addLogMessageToBuild
     *
     * Adds a message to the build log. Service messages are accepted..
     *
     */
    public function testAddLogMessageToBuild()
    {
    }

    /**
     * Test case for addProblemToBuild
     *
     * Add a build problem to the matching build..
     *
     */
    public function testAddProblemToBuild()
    {
    }

    /**
     * Test case for addTagsToBuild
     *
     * Add tags to the matching build..
     *
     */
    public function testAddTagsToBuild()
    {
    }

    /**
     * Test case for addTagsToMultipleBuilds
     *
     * Add tags to multiple matching builds..
     *
     */
    public function testAddTagsToMultipleBuilds()
    {
    }

    /**
     * Test case for cancelBuild
     *
     * cancelBuild.
     *
     */
    public function testCancelBuild()
    {
    }

    /**
     * Test case for cancelMultiple
     *
     * cancelMultipleBuilds.
     *
     */
    public function testCancelMultiple()
    {
    }

    /**
     * Test case for deleteBuild
     *
     * Delete build matching the locator..
     *
     */
    public function testDeleteBuild()
    {
    }

    /**
     * Test case for deleteBuildComment
     *
     * Remove the build comment matching the locator..
     *
     */
    public function testDeleteBuildComment()
    {
    }

    /**
     * Test case for deleteMultipleBuildComments
     *
     * Delete comments of multiple matching builds..
     *
     */
    public function testDeleteMultipleBuildComments()
    {
    }

    /**
     * Test case for deleteMultipleBuilds
     *
     * Delete multiple builds matching the locator..
     *
     */
    public function testDeleteMultipleBuilds()
    {
    }

    /**
     * Test case for downloadFileOfBuild
     *
     * Download specific file..
     *
     */
    public function testDownloadFileOfBuild()
    {
    }

    /**
     * Test case for getAggregatedBuildStatus
     *
     * Get the build status of aggregated matching builds..
     *
     */
    public function testGetAggregatedBuildStatus()
    {
    }

    /**
     * Test case for getAggregatedBuildStatusIcon
     *
     * Get the status icon (in specified format) of aggregated matching builds..
     *
     */
    public function testGetAggregatedBuildStatusIcon()
    {
    }

    /**
     * Test case for getAllBuilds
     *
     * Get all builds..
     *
     */
    public function testGetAllBuilds()
    {
    }

    /**
     * Test case for getArtifactDependencyChanges
     *
     * Get artifact dependency changes of the matching build..
     *
     */
    public function testGetArtifactDependencyChanges()
    {
    }

    /**
     * Test case for getArtifactsDirectory
     *
     * Get the artifacts' directory of the matching build..
     *
     */
    public function testGetArtifactsDirectory()
    {
    }

    /**
     * Test case for getBuild
     *
     * Get build matching the locator..
     *
     */
    public function testGetBuild()
    {
    }

    /**
     * Test case for getBuildActualParameters
     *
     * Get actual build parameters of the matching build..
     *
     */
    public function testGetBuildActualParameters()
    {
    }

    /**
     * Test case for getBuildField
     *
     * Get a field of the matching build..
     *
     */
    public function testGetBuildField()
    {
    }

    /**
     * Test case for getBuildFinishDate
     *
     * Get the finish date of the matching build..
     *
     */
    public function testGetBuildFinishDate()
    {
    }

    /**
     * Test case for getBuildNumber
     *
     * Get the number of the matching build..
     *
     */
    public function testGetBuildNumber()
    {
    }

    /**
     * Test case for getBuildPinInfo
     *
     * Check if the matching build is pinned..
     *
     */
    public function testGetBuildPinInfo()
    {
    }

    /**
     * Test case for getBuildProblems
     *
     * Get build problems of the matching build..
     *
     */
    public function testGetBuildProblems()
    {
    }

    /**
     * Test case for getBuildRelatedIssues
     *
     * Get related issues of the matching build..
     *
     */
    public function testGetBuildRelatedIssues()
    {
    }

    /**
     * Test case for getBuildResolved
     *
     * Get the resolvement status of the matching build..
     *
     */
    public function testGetBuildResolved()
    {
    }

    /**
     * Test case for getBuildResultingProperties
     *
     * Update a build parameter of the matching build..
     *
     */
    public function testGetBuildResultingProperties()
    {
    }

    /**
     * Test case for getBuildSourceFile
     *
     * Get a source file of the matching build..
     *
     */
    public function testGetBuildSourceFile()
    {
    }

    /**
     * Test case for getBuildStatisticValue
     *
     * Get a statistical value of the matching build..
     *
     */
    public function testGetBuildStatisticValue()
    {
    }

    /**
     * Test case for getBuildStatisticValues
     *
     * Get all statistical values of the matching build..
     *
     */
    public function testGetBuildStatisticValues()
    {
    }

    /**
     * Test case for getBuildStatusIcon
     *
     * Get the status icon (in specified format) of the matching build..
     *
     */
    public function testGetBuildStatusIcon()
    {
    }

    /**
     * Test case for getBuildStatusText
     *
     * Get the build status text of the matching build..
     *
     */
    public function testGetBuildStatusText()
    {
    }

    /**
     * Test case for getBuildTags
     *
     * Get tags of the matching build..
     *
     */
    public function testGetBuildTags()
    {
    }

    /**
     * Test case for getBuildTestOccurrences
     *
     * Get test occurrences of the matching build..
     *
     */
    public function testGetBuildTestOccurrences()
    {
    }

    /**
     * Test case for getBuildVcsLabels
     *
     * Get VCS labels of the matching build..
     *
     */
    public function testGetBuildVcsLabels()
    {
    }

    /**
     * Test case for getCanceledInfo
     *
     * Check if the matching build is canceled..
     *
     */
    public function testGetCanceledInfo()
    {
    }

    /**
     * Test case for getFileMetadataOfBuild
     *
     * Get metadata of specific file..
     *
     */
    public function testGetFileMetadataOfBuild()
    {
    }

    /**
     * Test case for getFilesListForSubpathOfBuild
     *
     * List files under this path..
     *
     */
    public function testGetFilesListForSubpathOfBuild()
    {
    }

    /**
     * Test case for getFilesListOfBuild
     *
     * List all files..
     *
     */
    public function testGetFilesListOfBuild()
    {
    }

    /**
     * Test case for getMultipleBuilds
     *
     * Get multiple builds matching the locator..
     *
     */
    public function testGetMultipleBuilds()
    {
    }

    /**
     * Test case for getZippedFileOfBuild
     *
     * Get specific file zipped..
     *
     */
    public function testGetZippedFileOfBuild()
    {
    }

    /**
     * Test case for markBuildAsRunning
     *
     * Starts the queued build as an agent-less build and returns the corresponding running build..
     *
     */
    public function testMarkBuildAsRunning()
    {
    }

    /**
     * Test case for pinMultipleBuilds
     *
     * Pin multiple matching builds..
     *
     */
    public function testPinMultipleBuilds()
    {
    }

    /**
     * Test case for removeMultipleBuildTags
     *
     * Remove tags from multiple matching builds..
     *
     */
    public function testRemoveMultipleBuildTags()
    {
    }

    /**
     * Test case for resetBuildFinishProperties
     *
     * Remove build parameters from the matching build..
     *
     */
    public function testResetBuildFinishProperties()
    {
    }

    /**
     * Test case for setBuildComment
     *
     * Update the comment on the matching build..
     *
     */
    public function testSetBuildComment()
    {
    }

    /**
     * Test case for setBuildFinishDate
     *
     * Marks the running build as finished by passing agent the current time of the build to finish..
     *
     */
    public function testSetBuildFinishDate()
    {
    }

    /**
     * Test case for setBuildNumber
     *
     * Update the number of the matching build..
     *
     */
    public function testSetBuildNumber()
    {
    }

    /**
     * Test case for setBuildPinInfo
     *
     * Update the pin info of the matching build..
     *
     */
    public function testSetBuildPinInfo()
    {
    }

    /**
     * Test case for setBuildStatusText
     *
     * Update the build status of the matching build..
     *
     */
    public function testSetBuildStatusText()
    {
    }

    /**
     * Test case for setBuildTags
     *
     * Update tags of the matching build..
     *
     */
    public function testSetBuildTags()
    {
    }

    /**
     * Test case for setFinishedTime
     *
     * Marks the running build as finished by passing agent the current time of the build to finish..
     *
     */
    public function testSetFinishedTime()
    {
    }

    /**
     * Test case for setMultipleBuildComments
     *
     * Update comments in multiple matching builds..
     *
     */
    public function testSetMultipleBuildComments()
    {
    }
}
